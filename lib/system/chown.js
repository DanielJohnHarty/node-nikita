// Generated by CoffeeScript 1.12.5
var fs, uid_gid;

module.exports = function(options) {
  options.log({
    message: "Entering chown",
    level: 'DEBUG',
    module: 'nikita/lib/chown'
  });
  if (options.argument != null) {
    options.target = options.argument;
  }
  if (options.target == null) {
    throw Error("Missing target option");
  }
  if (!((options.uid != null) || (options.gid != null))) {
    throw Error("Missing one of uid or gid option");
  }
  this.call(function(_, callback) {
    return uid_gid(options, callback);
  });
  this.call({
    unless: !!options.stat
  }, function(_, callback) {
    options.log({
      message: "Stat " + options.target,
      level: 'DEBUG',
      module: 'nikita/lib/chown'
    });
    return fs.stat(options.ssh, options.target, function(err, stat) {
      if ((err != null ? err.code : void 0) === 'ENOENT') {
        return callback(Error("Target Does Not Exist: " + (JSON.stringify(options.target))));
      }
      if (err) {
        return callback(err);
      }
      options.stat = stat;
      return callback();
    });
  });
  this.call(function(_, callback) {
    if ((!options.uid || options.stat.uid === options.uid) && (!options.gid || options.stat.gid === options.gid)) {
      options.log({
        message: "Matching ownerships on '" + options.target + "'",
        level: 'INFO',
        module: 'nikita/lib/chown'
      });
      return callback();
    }
    return callback(null, true);
  });
  return this.call({
    "if": (function() {
      return this.status(-1);
    })
  }, function(_, callback) {
    if (options.uid == null) {
      options.uid = options.stat.uid;
    }
    if (options.gid == null) {
      options.gid = options.stat.gid;
    }
    return fs.chown(options.ssh, options.target, options.uid, options.gid, function(err) {
      if (options.stat.uid === !options.uid) {
        options.log({
          message: "change uid from " + options.stat.uid + " to " + options.uid,
          level: 'WARN',
          module: 'nikita/lib/chown'
        });
      }
      if (options.stat.gid === !options.gid) {
        options.log({
          message: "change gid from " + options.stat.gid + " to " + options.gid,
          level: 'WARN',
          module: 'nikita/lib/chown'
        });
      }
      return callback(err);
    });
  });
};

fs = require('ssh2-fs');

uid_gid = require('../misc/uid_gid');
