// Generated by CoffeeScript 1.10.0
var misc,
  slice = [].slice,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

module.exports.cmd = function() {
  var cmd, i, j, k, len, opt, options, opts, properties, v;
  opts = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cmd = arguments[i++];
  properties = ['engine', 'admin_username', 'admin_password', 'username', 'password', 'host', 'database'];
  options = {};
  for (j = 0, len = opts.length; j < len; j++) {
    opt = opts[j];
    for (k in opt) {
      v = opt[k];
      if (indexOf.call(properties, k) < 0) {
        continue;
      }
      options[k] = v;
    }
  }
  options.engine = options.engine.toLowerCase();
  switch (options.engine) {
    case 'mysql':
      return ["mysql", "-h " + options.host, "-u " + (options.admin_username || options.username), "-p " + (options.admin_password || options.password), "\"" + cmd + "\""].join(' ');
    case 'postgres':
      return ["PGPASSWORD=" + (options.admin_password || options.password), "psql", "-h " + options.host, "-U " + (options.admin_username || options.username), options.database ? "-d " + options.database : void 0, "-tAc \"" + cmd + "\""].join(' ');
    default:
      throw Error("Unsupported engine: " + (JSON.stringify(options.engine)));
  }
};

misc = require('.');
