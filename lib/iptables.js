// Generated by CoffeeScript 1.8.0
var execute, iptables, wrap;

module.exports = function(goptions, options, callback) {
  return wrap(arguments, function(options, next) {
    if (typeof options.log === "function") {
      options.log("Mecano `iptables`: list existing rules");
    }
    return execute({
      cmd: "service iptables status &>/dev/null && iptables -S",
      ssh: options.ssh,
      log: options.log,
      stdout: options.stdout,
      stderr: options.stderr,
      code_skipped: 3
    }, function(err, executed, stdout) {
      var cmd, newrules, oldrules;
      if (err) {
        return next(err);
      }
      if (!executed) {
        return next(Error("Service iptables not started"));
      }
      oldrules = iptables.parse(stdout);
      newrules = iptables.normalize(options.rules);
      cmd = iptables.cmd(oldrules, newrules);
      if (!cmd.length) {
        return next();
      }
      if (typeof options.log === "function") {
        options.log("Mecano `iptables`: modify rules");
      }
      return execute({
        cmd: "" + (cmd.join('; ')) + "; ",
        ssh: options.ssh,
        log: options.log,
        trap_on_error: true,
        stdout: options.stdout,
        stderr: options.stderr
      }, function(err, executed) {
        return next(err, true);
      });
    });
  });
};

wrap = require('./misc/wrap');

iptables = require('./misc/iptables');

execute = require('./execute');
