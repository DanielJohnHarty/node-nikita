// Generated by CoffeeScript 1.10.0
var docker, string, util;

module.exports = function(options, callback) {
  var cmd, images;
  if (options.source == null) {
    return callback(Error('Missing source parameter'));
  }
  cmd = " load -i " + options.source;
  images = {};
  delete options.cmd;
  return docker.exec(' images | grep -v \'<none>\' | awk \'{ print $1":"$2":"$3 }\'', options, false, function(err, executed, stdout, stderr) {
    var i, image, infos, len, ref;
    if (err) {
      return callback(err);
    }
    if (string.lines(stdout).length > 1) {
      ref = string.lines(stdout);
      for (i = 0, len = ref.length; i < len; i++) {
        image = ref[i];
        image = image.trim();
        if (image !== '') {
          infos = image.split(':');
          images[infos[0] + ":" + infos[1]] = "" + infos[2];
        }
      }
    }
    return docker.exec(cmd, options, false, function(err) {
      if (err) {
        return callback(err);
      }
      return docker.exec(' images | grep -v \'<none>\' | awk \'{ print $1":"$2":"$3 }\'', options, false, function(err, executed, out, stderr) {
        var diff, j, k, len1, new_image, new_images, new_k, ref1;
        if (err) {
          return allback(err, executed, out, stderr);
        }
        new_images = {};
        diff = false;
        if (string.lines(stdout).length > 1) {
          ref1 = string.lines(out.toString());
          for (j = 0, len1 = ref1.length; j < len1; j++) {
            image = ref1[j];
            if (image !== '') {
              infos = image.split(':');
              new_images[infos[0] + ":" + infos[1]] = "" + infos[2];
            }
          }
        }
        for (new_k in new_images) {
          new_image = new_images[new_k];
          if (images[new_k] == null) {
            diff = true;
            break;
          } else {
            for (k in images) {
              image = images[k];
              if (image !== new_image && new_k === k) {
                diff = true;
                break;
              }
            }
          }
        }
        return callback(err, diff, stdout, stderr);
      });
    });
  });
};

docker = require('../misc/docker');

string = require('../misc/string');

util = require('util');
