// Generated by CoffeeScript 1.9.3
var docker, path, util;

module.exports = function(options, callback) {
  if (options.image == null) {
    return callback(Error('Missing image parameter'));
  }
  if ((options.content != null) && (options.dockerfile != null)) {
    return callback(Error('Can not build from Dockerfile and content'));
  }
  return docker.get_provider(options, (function(_this) {
    return function(err, provider) {
      var cmd, i, len, opt, opts, ref;
      if (err) {
        return callback(err);
      }
      options.provider = provider;
      cmd = docker.prepare_cmd(provider, options.machine);
      if (util.isError(cmd)) {
        return callback(cmd);
      }
      cmd += 'docker build';
      ref = ['force_rm', 'quiet', 'no_cache'];
      for (i = 0, len = ref.length; i < len; i++) {
        opt = ref[i];
        if (options[opt]) {
          cmd += " --" + (opt.replace('_', '-'));
        }
      }
      if ((options.rm != null) && !options.rm) {
        cmd += ' --rm=false';
      }
      cmd += " -t \"" + options.image + "\"";
      if (options.dockerfile != null) {
        if (typeof options.log === "function") {
          options.log("Building from Dockerfile: '" + options.dockerfile + "' [INFO]");
        }
        cmd += " -f " + options.dockerfile + " " + (path.dirname(options.dockerfile));
      } else if (options.content != null) {
        if (typeof options.log === "function") {
          options.log("Building from text: Docker won't have a context. ADD/COPY not working [WARN]");
        }
        if (options.content != null) {
          cmd += " - <<DOCKERFILE\n" + options.content + "\nDOCKERFILE";
        }
      } else {
        if (typeof options.log === "function") {
          options.log("Building from CWD [INFO]");
        }
        cmd += ' .';
      }
      opts = docker.get_options(cmd, options);
      return _this.execute(opts, function(err, executed, stdout, stderr) {
        return callback(err, executed, stdout, stderr);
      });
    };
  })(this));
};

docker = require('./commons');

path = require('path');

util = require('util');
