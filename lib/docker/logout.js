// Generated by CoffeeScript 2.3.1
// # `nikita.docker.logout`

// Log out from a Docker registry or the one defined by the `registry` option.

// ## Options

// * `boot2docker` (boolean)   
//   Whether to use boot2docker or not, default to false.
// * `registry` (string)   
//   Address of the registry server, default to "https://index.docker.io/v1/".
// * `machine` (string)   
//   Name of the docker-machine, required if using docker-machine.
// * `code` (int|array)   
//   Expected code(s) returned by the command, int or array of int, default to 0.
// * `code_skipped`   
//   Expected code(s) returned by the command if it has no effect, executed will
//   not be incremented, int or array of int.

// ## Callback parameters

// * `err`   
//   Error object if any.   
// * `status`   
//   True if logout.

// ## Source Code
var docker, util;

module.exports = function({options}, callback) {
  var cmd, k, ref, v;
  this.log({
    message: "Entering Docker logout",
    level: 'DEBUG',
    module: 'nikita/lib/docker/logout'
  });
  // Global options
  if (options.docker == null) {
    options.docker = {};
  }
  ref = options.docker;
  for (k in ref) {
    v = ref[k];
    if (options[k] == null) {
      options[k] = v;
    }
  }
  if (options.container == null) {
    // Validate parameters
    return callback(Error('Missing container parameter'));
  }
  // rm is false by default only if options.service is true
  cmd = 'logout';
  if (options.registry != null) {
    cmd += ` "${options.registry}"`;
  }
  return this.system.execute({
    cmd: docker.wrap(options, cmd)
  }, docker.callback);
};

// ## Modules Dependencies
docker = require('../misc/docker');

util = require('util');
