// Generated by CoffeeScript 1.11.1
var docker, path;

module.exports = function(options) {
  var cmd, k, ref, services, source_dir, v;
  options.log({
    message: "Entering Docker Compose",
    level: 'DEBUG',
    module: 'mecano/lib/docker/compose/up'
  });
  if (options.docker == null) {
    options.docker = {};
  }
  ref = options.docker;
  for (k in ref) {
    v = ref[k];
    if (options[k] == null) {
      options[k] = v;
    }
  }
  if ((options.target == null) && (options.content == null)) {
    throw Error('Missing docker-compose content or target');
  }
  if (options.content && (options.target == null)) {
    if (options.target == null) {
      options.target = "/tmp/docker_compose_" + (Date.now()) + "/docker-compose.yml";
    }
  }
  if (options.detached == null) {
    options.detached = true;
  }
  if (options.force == null) {
    options.force = false;
  }
  if (options.recreate == null) {
    options.recreate = false;
  }
  if (options.services == null) {
    options.services = [];
  }
  if (!Array.isArray(options.services)) {
    options.services = [options.services];
  }
  services = options.services.join(' ');
  cmd = " --file " + options.target + " up ";
  if (options.detached) {
    cmd += ' -d ';
  }
  if (options.force) {
    cmd += ' --force-recreate ';
  }
  cmd += " " + services;
  source_dir = "" + (path.dirname(options.target));
  if (options["if"] == null) {
    options["if"] = options.content != null;
  }
  options.compose = true;
  this.file.yaml(options);
  return this.execute({
    cwd: source_dir,
    cmd: docker.wrap(options, cmd)
  }, docker.callback);
};

docker = require('../../misc/docker');

path = require('path');
