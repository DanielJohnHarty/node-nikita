// Generated by CoffeeScript 1.10.0
var docker, file, ssh2fs, util;

module.exports = function(options, callback) {
  var cache, cache_path, cmd, destination_path;
  if (options.source == null) {
    return callback(Error('Missing source parameter'));
  }
  if (options.destination == null) {
    return callback(Error('Missing destination parameter'));
  }
  if (options.container == null) {
    return callback(Error('Missing container parameter'));
  }
  cache = "/tmp/mecano_docker_cp_" + (Date.now());
  destination_path = options.destination + "/" + (options.source.split('/').pop().toString());
  cache_path = cache + "/" + (options.source.split('/').pop().toString());
  cmd = " cp " + options.container + ":" + options.source + " " + cache;
  return docker.exec(cmd, options, null, (function(_this) {
    return function(err, copied, stdout, stderr) {
      if (err) {
        return callback(err, copied, stdout, stderr);
      }
      return ssh2fs.exists(options.ssh, destination_path, function(err, exists) {
        if (err) {
          return callback(err);
        }
        if (exists) {
          return file.hash(options.ssh, cache_path, 'md5', function(err, value_cache) {
            if (err) {
              return callback(err);
            }
            return file.hash(options.ssh, destination_path, 'md5', function(err, value_dest) {
              if (err || (value_cache === value_dest)) {
                return callback(err, null);
              }
              return _this.copy({
                source: cache_path,
                destination: options.destination
              }, function(err, executed, stdout, stderr) {
                return callback(err, executed, stdout, stderr);
              });
            });
          });
        } else {
          return _this.copy({
            source: cache_path,
            destination: options.destination
          }, function(err, executed, stdout, stderr) {
            return callback(err, executed, stdout, stderr);
          });
        }
      });
    };
  })(this));
};

file = require('../misc').file;

util = require('util');

ssh2fs = require('ssh2-fs');

docker = require('../misc/docker');
