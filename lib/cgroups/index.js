// Generated by CoffeeScript 1.11.1
var misc;

module.exports = function(options) {
  if (!((options.cgroups != null) || (options.mounts != null) || (options["default"] != null))) {
    throw Error('Missing cgroups content');
  }
  if (options.mounts == null) {
    options.mounts = [];
  }
  if (options.cgroups == null) {
    options.cgroups = {};
  }
  if (options["default"] == null) {
    options["default"] = {};
  }
  if (options.merge == null) {
    options.merge = true;
  }
  this.call({
    shy: true
  }, function() {
    var base;
    if ((base = this.options).store == null) {
      base.store = {};
    }
    this.call({
      if_exists: '/etc/version',
      handler: function() {
        var base1;
        return (base1 = this.options.store)['mecano:system:type'] != null ? base1['mecano:system:type'] : base1['mecano:system:type'] = 'ubuntu';
      }
    });
    this.call({
      if_exists: '/etc/version',
      unless: function() {
        return this.status(-1);
      },
      handler: function() {
        var base1;
        return (base1 = this.options.store)['mecano:system:type'] != null ? base1['mecano:system:type'] : base1['mecano:system:type'] = 'redhat';
      }
    });
    return this.execute({
      "if": function() {
        return this.options.store['mecano:system:type'] === 'redhat';
      },
      cmd: "$(lsb_release -rs | cut -f1 -d.)"
    }, function(err, status, stdout, stderr) {
      var base1;
      if (err) {
        throw err;
      }
      stdout = stdout.trim();
      return (base1 = this.options.store)['mecano:system:release'] != null ? base1['mecano:system:release'] : base1['mecano:system:release'] = stdout;
    });
  });
  return this.call({
    shy: true,
    "if": function() {
      return this.options.store['mecano:system:type'] === 'redhat';
    },
    handler: function() {
      return this.fs.readFile('/etc/cgconfig.conf', function(err, file) {
        var base, cgconfig, cgroup_path, cpu_path, cpus;
        if (err) {
          throw err;
        }
        cgconfig = misc.cgconfig.parse(file);
        cpus = cgconfig.mounts.filter(function(mount) {
          if (mount.type === 'cpu') {
            return mount;
          }
        });
        if (cpus.length > 0) {
          cpu_path = cpus[0].split(',')[0];
          cgroup_path = "" + (path.dirname(cpu_path));
          if ((base = this.options.store)['mecano:cgroups:cpu_path'] == null) {
            base['mecano:cgroups:cpu_path'] = mount.path;
          }
          cpu_path = (/\s.*/.exec(result))[0].trim().split(',')[index];
          cgroup_path = cgroups.cgroup_path = "" + (path.dirname(cpu_path));
        }
        return null;
      });
    }
  });
};

misc = require('../misc');
