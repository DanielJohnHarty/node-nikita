// Generated by CoffeeScript 1.9.1
var execute, wrap;

module.exports = function(options, callback) {
  var crontab, jobs, ref, ref1;
  if (!(((ref = options.when) != null ? ref.length : void 0) > 0)) {
    return callback(new Error('valid when is required'));
  }
  if (!(((ref1 = options.cmd) != null ? ref1.length : void 0) > 0)) {
    return callback(new Error('valid cmd is required'));
  }
  if (options.user != null) {
    if (typeof options.log === "function") {
      options.log("Using user " + options.user + " [DEBUG]");
    }
    crontab = "crontab -u " + options.user;
  } else {
    if (typeof options.log === "function") {
      options.log('Using default user [DEBUG]');
    }
    crontab = "crontab";
  }
  jobs = null;
  return this.execute({
    cmd: crontab + " -l",
    code: [0, 1]
  }, function(err, _, stdout, stderr) {
    var i, job, len, myjob, regex;
    if (err && !/^no crontab for/.test(stderr)) {
      throw err;
    }
    myjob = options.when + " " + options.cmd;
    jobs = stdout.trim().split('\n');
    regex = new RegExp(".* " + options.cmd);
    for (i = 0, len = jobs.length; i < len; i++) {
      job = jobs[i];
      if (myjob === job) {
        if (typeof options.log === "function") {
          options.log("Job is found in crontab, skipping [INFO]");
        }
        return jobs = null;
      }
      if (regex.test(job)) {
        if (typeof options.log === "function") {
          options.log("Job is found in crontab, but frequency doesn't match. Updating [WARN]");
        }
        job = myjob;
        return;
      }
    }
    if (typeof options.log === "function") {
      options.log("Job not found in crontab. Adding [WARN]");
    }
    return jobs.push(myjob);
  }).then(function(err) {
    if (err) {
      return callback(err);
    }
    if (!jobs) {
      return callback();
    }
    return this.execute({
      cmd: options.user != null ? "su -l " + options.user + " -c '" + options.cmd + "'" : options.cmd,
      "if": options.exec
    }).execute({
      cmd: crontab + " - <<EOF\n" + (jobs.join('\n')) + "\nEOF"
    }).then(callback);
  });
};

wrap = require('./misc/wrap');

execute = require('./execute');
