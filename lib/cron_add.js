// Generated by CoffeeScript 1.9.1
var execute, wrap;

module.exports = function(options, callback) {
  return wrap(this, arguments, function(options, callback) {
    var crontab, do_list, do_write, jobs, ref, ref1;
    if (!(((ref = options.when) != null ? ref.length : void 0) > 0)) {
      return callback(new Error('valid when is required'));
    }
    if (!(((ref1 = options.cmd) != null ? ref1.length : void 0) > 0)) {
      return callback(new Error('valid cmd is required'));
    }
    if (options.user != null) {
      if (typeof options.log === "function") {
        options.log("Using user " + options.user + " [DEBUG]");
      }
      crontab = "crontab -u " + options.user;
    } else {
      if (typeof options.log === "function") {
        options.log('Using default user [DEBUG]');
      }
      crontab = "crontab";
    }
    jobs = null;
    do_list = function() {
      return execute({
        cmd: crontab + " -l",
        ssh: options.ssh,
        log: options.log
      }, function(err, _, stdout, stderr) {
        var i, job, len, myjob, regex;
        if (err && !/^no crontab for/.test(stderr)) {
          return callback(err);
        }
        myjob = options.when + " " + options.cmd;
        jobs = stdout.split('\n');
        jobs.pop();
        regex = new RegExp(".* " + options.cmd);
        for (i = 0, len = jobs.length; i < len; i++) {
          job = jobs[i];
          if (myjob === job) {
            if (typeof options.log === "function") {
              options.log("Job is found in crontab, skipping [INFO]");
            }
            return callback(null, false);
          }
          if (regex.test(job)) {
            if (typeof options.log === "function") {
              options.log("Job is found in crontab, but frequency does'nt match. Updating [WARN]");
            }
            job = myjob;
            return do_write();
          }
        }
        if (typeof options.log === "function") {
          options.log("Job not found in crontab. Adding [WARN]");
        }
        jobs.push(myjob);
        return do_write();
      });
    };
    do_write = function() {
      var cron, to_exec;
      cron = {
        cmd: "echo -e '" + (jobs.join('\\n')) + "' | " + crontab + " -",
        ssh: options.ssh,
        log: options.log,
        stdout: options.stdout,
        stderr: options.stderr
      };
      if (options.exec) {
        to_exec = [];
        to_exec.push(cron);
        to_exec.push({
          cmd: options.user != null ? "su -l " + options.user + " -c '" + options.cmd + "'" : options.cmd,
          ssh: options.ssh,
          log: options.log,
          stdout: options.stdout,
          stderr: options.stderr
        });
        return execute(to_exec, callback);
      } else {
        return execute(cron, callback);
      }
    };
    return do_list();
  });
};

wrap = require('./misc/wrap');

execute = require('./execute');
