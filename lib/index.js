// Generated by CoffeeScript 1.10.0
var context, registry;

module.exports = function() {
  return context.apply(null, arguments);
};

context = require('./context');

registry = require('./misc/registry');

(function() {
  var _, fn, i, len, name, ref, results;
  module.exports.register = function(name, handler) {
    if (handler === null || handler === false) {
      if (module.exports[name]) {
        delete module.exports[name];
      }
      registry.register(name, handler);
      return module.exports;
    }
    registry.register(name, handler);
    return Object.defineProperty(module.exports, name, {
      configurable: true,
      get: function() {
        return context()[name];
      }
    });
  };
  module.exports.registered = registry.registered;
  fn = function(name) {
    return Object.defineProperty(module.exports, name, {
      configurable: true,
      get: function() {
        return context()[name];
      }
    });
  };
  for (name in registry) {
    _ = registry[name];
    fn(name);
  }
  ref = ['end', 'call', 'before', 'after', 'then', 'on'];
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    name = ref[i];
    results.push((function(name) {
      return module.exports[name] = function() {
        var obj;
        obj = context();
        return obj[name].apply(obj, arguments);
      };
    })(name));
  }
  return results;
})();
