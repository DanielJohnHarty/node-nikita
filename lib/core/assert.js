// Generated by CoffeeScript 2.0.0
// # `nikita.assert(options, [callback])`

// A set of assertion tools.

// ## Options

// * `status` (boolean)   
//   Ensure the current status match the provided value.   

// ## Callback Parameters

// * `err`   
//   Error object if assertion failed.   

// ## Source Code
module.exports = function(options) {
  var status;
  options.log({
    message: "Entering assert",
    level: 'DEBUG',
    module: 'nikita/lib/assert'
  });
  // ## Check current status

  // ```js
  // nikita.assert({
  //   ssh: connection   
  //   status: true
  // }, function(err){
  //   console.log(err ? err.message : 'Assertion is ok');
  // });
  // ```
  status = this.status();
  this.call({
    if: (options.status != null) && status !== options.status,
    handler: function() {
      var message;
      message = `Invalid status: expected ${JSON.stringify(options.status)}, got ${JSON.stringify(status)}`;
      throw Error(message);
    }
  });
  if (options.host && !options.port) {
    // ## Check server listening

    // ```js
    // nikita.assert({
    //   ssh: connection   
    //   host: 'localhost'
    //   port: 80
    // }, function(err){
    //   console.log(err);
    // });
    // ```
    throw Error("Required option port if host");
  }
  if (options.port && !options.host) {
    throw Error("Required option host if port");
  }
  return this.system.execute({
    if: options.host,
    cmd: `bash -c 'echo > /dev/tcp/${options.host}/${options.port}'`
  }, function(err) {
    if (err) {
      throw Error(`Closed Connection to '${options.host}:${options.port}'`);
    }
  });
};
