// Generated by CoffeeScript 2.0.3
// # `nikita.krb5.delprinc(options, [callback])`

// Remove a Kerberos principal and optionally its keytab.

// ## Options

// * `principal`   
//   Principal to be created.   
// * `kadmin_server`   
//   Address of the kadmin server; optional, use "kadmin.local" if missing.   
// * `kadmin_principal`   
//   KAdmin principal name unless `kadmin.local` is used.   
// * `kadmin_password`   
//   Password associated to the KAdmin principal.   
// * `keytab`   
//   Path to the file storing key entries.   

// ## Example

// ```
// require('nikita').krb5_delrinc({
//   principal: 'myservice/my.fqdn@MY.REALM',
//   keytab: '/etc/security/keytabs/my.service.keytab',
//   kadmin_principal: 'me/admin@MY_REALM',
//   kadmin_password: 'pass',
//   kadmin_server: 'localhost'
// }, function(err, removed){
//   console.log(err ? err.message : 'Principal removed: ' + !!removed);
// });
// ```

// ## Source Code
var misc;

module.exports = function(options, callback) {
  var cmd_delprinc, cmd_getprinc;
  if (!options.principal) {
    return callback(Error('Property principal is required'));
  }
  if (/.*@.*/.test(options.kadmin_principal)) {
    // Normalize realm and principal for later usage of options
    if (options.realm == null) {
      options.realm = options.kadmin_principal.split('@')[1];
    }
  }
  if (!/^\S+@\S+$/.test(options.principal)) {
    options.principal = `${options.principal}@${options.realm}`;
  }
  // Prepare commands
  cmd_getprinc = misc.kadmin(options, `getprinc ${options.principal}`);
  cmd_delprinc = misc.kadmin(options, `delprinc -force ${options.principal}`);
  this.system.execute({
    cmd: cmd_delprinc,
    if_exec: `${cmd_getprinc} | grep '${options.principal}'`
  });
  this.system.remove({
    target: options.keytab,
    if: options.keytab
  });
  return this.then(callback);
};

// ## Dependencies
misc = require('../misc');
