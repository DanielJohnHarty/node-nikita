// Generated by CoffeeScript 2.0.0
// # `nikita.log.csv(options, [callback])`

// Write log to the host filesystem in CSV.

// ## Options

// * `archive` (boolean)   
//   Save a copy of the previous logs inside a dedicated directory, default is
//   "false".   
// * `basedir` (string)    
//   Directory where to store logs relative to the process working directory.
//   Default to the "log" directory. Note, if the "archive" option is activated
//   log file will be stored accessible from "./log/latest".   
// * `filename` (string)   
//   Name of the log file, contextually rendered with all options passed to
//   the mustache templating engine. Default to "{{shortname}}.log", where 
//   "shortname" is the ssh host or localhost.   

// Global options can be alternatively set with the "log_csv" property.

// ## Source Code
var log_fs;

module.exports = {
  ssh: null,
  handler: function(options) {
    var k, ref, stdouting, v;
    // Obtains options from "log_csv" namespace
    if (options.log_csv == null) {
      options.log_csv = {};
    }
    ref = options.log_csv;
    for (k in ref) {
      v = ref[k];
      options[k] = v;
    }
    stdouting = 0;
    return this.call(options, log_fs, {
      serializer: {
        'diff': function(log) {
          return `${log.type},${log.level},${JSON.stringify(log.message)},\n`;
        },
        'end': function() {
          return "lifecycle,INFO,Finished with success,\n";
        },
        'error': function(err) {
          var content, error, i, len, print, ref1;
          content = [];
          content.push("lifecycle,ERROR,Finished with error,\n");
          print = function(err) {
            return content.push(`lifecycle,ERROR,${err.stack || err.message},\n`);
          };
          if (!err.errors) {
            print(err);
          } else if (err.errors) {
            ref1 = err.errors;
            for (i = 0, len = ref1.length; i < len; i++) {
              error = ref1[i];
              print(error);
            }
          }
          return content.join();
        },
        'header': function(log) {
          return `${log.type},,,${log.header}\n`;
        },
        'stdin': function(log) {
          return `${log.type},${log.level},${JSON.stringify(log.message)},\n`;
        },
        'stderr': function(log) {
          return `${log.type},${log.level},${JSON.stringify(log.message)},\n`;
        },
        'stdout': function(log) {
          return `${log.type},${log.level},${JSON.stringify(log.message)},\n`;
        },
        'text': function(log) {
          return `${log.type},${log.level},${JSON.stringify(log.message)},\n`;
        }
      }
    });
  }
};

// ## Dependencies
log_fs = require('./fs');
