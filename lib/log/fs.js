// Generated by CoffeeScript 1.12.4
var fs, mustache, path, stream;

module.exports = {
  ssh: null,
  handler: function(options) {
    var k, latestdir, logdir, now, ref, v;
    if (options.log_fs == null) {
      options.log_fs = {};
    }
    ref = options.log_fs;
    for (k in ref) {
      v = ref[k];
      options[k] = v;
    }
    if (!options.serializer) {
      throw Error("Missing option: serializer");
    }
    if (options.archive == null) {
      options.archive = false;
    }
    if (options.basedir == null) {
      options.basedir = './log';
    }
    options.basedir = path.resolve(options.basedir);
    if (options.basename == null) {
      options.basename = 'localhost';
    }
    if (options.filename == null) {
      options.filename = "{{basename}}.log";
    }
    options.basedir = mustache.render(options.basedir, options);
    options.filename = mustache.render(options.filename, options);
    if (!options.archive) {
      logdir = path.resolve(options.basedir);
    } else {
      latestdir = path.resolve(options.basedir, 'latest');
      now = new Date();
      if (options.archive === true) {
        options.archive = ("" + (now.getFullYear())).slice(-2) + ("0" + (now.getFullYear())).slice(-2) + ("0" + (now.getDate())).slice(-2);
      }
      logdir = path.resolve(options.basedir, options.archive);
    }
    this.system.mkdir({
      shy: true
    }, logdir);
    this.call(function() {
      if (options.stream == null) {
        options.stream = fs.createWriteStream(path.resolve(logdir, options.filename));
      }
      return this.call(options, stream);
    });
    return this.system.link({
      "if": latestdir,
      shy: true,
      source: logdir,
      target: latestdir
    });
  }
};

fs = require('fs');

path = require('path');

mustache = require('mustache');

stream = require('./stream');
