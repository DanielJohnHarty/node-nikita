// Generated by CoffeeScript 1.11.1
var moment, path;

module.exports = function(options, callback) {
  var compress, filename, m, target;
  options.log({
    message: "Entering backup",
    level: 'DEBUG',
    module: 'mecano/lib/tools/backup'
  });
  if (!options.target) {
    throw Error('Missing option: "target"');
  }
  if (!options.name) {
    throw Error('Missing option: "name"');
  }
  m = moment();
  if (options.locale) {
    m.locale(options.locale);
  } else {
    m.utc();
  }
  filename = m.format(options.format);
  target = options.target + "/" + options.name + "/" + filename;
  compress = options.compress;
  if (compress === true || !compress) {
    compress = 'tgz';
  }
  options.log({
    message: "Source is " + (JSON.stringify(options.source)),
    level: 'INFO',
    module: 'mecano/lib/tools/backup'
  });
  options.log({
    message: "Target is " + (JSON.stringify(target)),
    level: 'INFO',
    module: 'mecano/lib/tools/backup'
  });
  this.system.mkdir("" + (path.dirname(target)));
  this.system.copy({
    source: "" + options.source,
    target: "" + target,
    "if": options.source,
    if_exec: "[ -f " + options.source + " ]",
    unless: options.compress
  });
  this.tools.compress({
    source: "" + options.source,
    target: target + "." + compress,
    format: "" + compress,
    unless: function() {
      return this.status(-1);
    }
  });
  return this.then(function(err, status) {
    return callback(err, status, {
      base_dir: options.target,
      name: options.name,
      filename: filename,
      target: target
    });
  });
};

moment = require('moment');

path = require('path');
