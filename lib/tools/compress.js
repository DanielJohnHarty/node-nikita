// Generated by CoffeeScript 1.12.6
var fs, path;

module.exports = function(options) {
  var dir, ext, format, name;
  options.log({
    message: "Entering compress",
    level: 'DEBUG',
    module: 'nikita/lib/tools/compress'
  });
  if (!options.source) {
    throw Error("Missing source: " + options.source);
  }
  if (!options.target) {
    throw Error("Missing target: " + options.target);
  }
  options.source = path.normalize(options.source);
  options.target = path.normalize(options.target);
  dir = path.dirname(options.source);
  name = path.basename(options.source);
  if (options.format != null) {
    format = options.format;
  } else {
    if (/\.(tar\.gz|tgz)$/.test(options.target)) {
      format = 'tgz';
    } else if (/\.tar$/.test(options.target)) {
      format = 'tar';
    } else if (/\.zip$/.test(options.target)) {
      format = 'zip';
    } else if (/\.bz2$/.test(options.target)) {
      format = 'bz2';
    } else if (/\.xz$/.test(options.target)) {
      format = 'xz';
    } else {
      ext = path.extname(options.source);
      throw Error("Unsupported extension, got " + (JSON.stringify(ext)));
    }
  }
  return this.system.execute((function() {
    switch (format) {
      case 'tgz':
        return "tar czf " + options.target + " -C " + dir + " " + name;
      case 'tar':
        return "tar cf  " + options.target + " -C " + dir + " " + name;
      case 'bz2':
        return "tar cjf " + options.target + " -C " + dir + " " + name;
      case 'xz':
        return "tar cJf " + options.target + " -C " + dir + " " + name;
      case 'zip':
        return "(cd " + dir + " && zip -r " + options.target + " " + name + " && cd -)";
    }
  })());
};

fs = require('ssh2-fs');

path = require('path');
