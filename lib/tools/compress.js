// Generated by CoffeeScript 1.12.6
var fs, path;

module.exports = function(options) {
  var dir, format, name;
  options.log({
    message: "Entering compress",
    level: 'DEBUG',
    module: 'nikita/lib/tools/compress'
  });
  if (!options.source) {
    throw Error("Missing source: " + options.source);
  }
  if (!options.target) {
    throw Error("Missing target: " + options.target);
  }
  options.source = path.normalize(options.source);
  options.target = path.normalize(options.target);
  dir = path.dirname(options.source);
  name = path.basename(options.source);
  if (options.format != null) {
    format = options.format;
  } else {
    format = module.exports.ext_to_type(options.target);
  }
  this.system.execute((function() {
    switch (format) {
      case 'tgz':
        return "tar czf " + options.target + " -C " + dir + " " + name;
      case 'tar':
        return "tar cf  " + options.target + " -C " + dir + " " + name;
      case 'bz2':
        return "tar cjf " + options.target + " -C " + dir + " " + name;
      case 'xz':
        return "tar cJf " + options.target + " -C " + dir + " " + name;
      case 'zip':
        return "(cd " + dir + " && zip -r " + options.target + " " + name + " && cd -)";
    }
  })());
  return this.system.remove({
    "if": options.clean,
    source: options.source
  });
};

module.exports.type_to_ext = function(type) {
  if (type === 'tgz' || type === 'tar' || type === 'zip' || type === 'bz2' || type === 'xz') {
    return "." + type;
  }
  throw Error("Unsupported Type: " + (JSON.stringify(type)));
};

module.exports.ext_to_type = function(name) {
  if (/((.+\.)|^\.|^)(tar\.gz|tgz)$/.test(name)) {
    return 'tgz';
  } else if (/((.+\.)|^\.|^)tar$/.test(name)) {
    return 'tar';
  } else if (/((.+\.)|^\.|^)zip$/.test(name)) {
    return 'zip';
  } else if (/((.+\.)|^\.|^)bz2$/.test(name)) {
    return 'bz2';
  } else if (/((.+\.)|^\.|^)xz$/.test(name)) {
    return 'xz';
  } else {
    throw Error("Unsupported Extension: " + (JSON.stringify(path.extname(name))));
  }
};

fs = require('ssh2-fs');

path = require('path');
