// Generated by CoffeeScript 1.12.4
var fs, glob, misc, path, string, url;

module.exports = function(options) {
  var file_name, keys, remote_files;
  options.log({
    message: "Entering tools.repo",
    level: 'DEBUG',
    module: 'nikita/lib/tools/repo'
  });
  if (!options.source) {
    throw Error("Missing source: " + options.source);
  }
  options.source = path.resolve('/etc/yum.repos.d', options.source);
  if (options.target == null) {
    options.target = path.basename(options.source);
  }
  options.target = path.resolve('/etc/yum.repos.d', options.target);
  if (options.verify == null) {
    options.verify = true;
  }
  if (options.local == null) {
    options.local = false;
  }
  remote_files = [];
  keys = [];
  file_name = path.basename(options.source);
  if (options.target == null) {
    options.target = path.resolve('/etc/yum.repos.d/', file_name);
  }
  this.call({
    "if": options.replace != null
  }, function(_, callback) {
    options.log({
      message: "Searching repositories inside \"/etc/yum.repos.d/\"",
      level: 'DEBUG',
      module: 'nikita/lib/tools/repo'
    });
    return glob(options.ssh, "/etc/yum.repos.d/" + options.replace, function(err, files) {
      var file;
      if (err) {
        return callback(err);
      }
      remote_files = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = files.length; i < len; i++) {
          file = files[i];
          if (file === file_name) {
            continue;
          }
          results.push("/etc/yum.repos.d/" + file);
        }
        return results;
      })();
      return callback();
    });
  });
  return this.system.remove(remote_files);
};

fs = require('ssh2-fs');

string = require('../misc/string');

path = require('path');

glob = require('../misc/glob');

misc = require('../misc');

url = require('url');
