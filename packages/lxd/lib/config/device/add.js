// Generated by CoffeeScript 2.4.1
// # `nikita.lxd.config.device.add`

// Add devices to containers or profiles.

// ## Options

// * `name` (string, required)   
//   The name of the container.
// * `device` (string, required)   
//   Name of the device in LXD configuration, for example "eth0".
// * `config` (object, required)   
//   One or multiple keys to set.
// * `type` (string, required)   
//   Type of device, for example "nic".

// ## Add a network interface

// ```js
// require('nikita')
// .lxd.config.device.add({
//   name: "my_container",
//   device: 'eth0',
//   type: 'nic',
//   config:
//     name: 'eth0',
//     nictype: 'bridged',
//     parent: 'lxdbr0'
// }, function(err, {status}) {
//   console.log( err ? err.message : status ?
//     'bidge added' : 'bridge already present')
// });
// ```

// ## Source Code
var diff, yaml;

module.exports = function({options}) {
  var key, value;
  this.log({
    message: "Entering lxd.config.device.add",
    level: 'DEBUG',
    module: '@nikitajs/lxd/lib/config/device/add'
  });
  if (!options.name) {
    throw Error("Invalid Option: name is required");
  }
  if (!options.device) {
    throw Error("Invalid Option: device is required");
  }
  if (options.config == null) {
    options.config = {};
  }
  this.lxd.config.device.exists({
    name: options.name,
    device: options.device
  });
  return this.system.execute({
    unless: function() {
      return this.status(-1);
    },
    cmd: `${[
      'lxc',
      'config',
      'device',
      'add',
      options.name,
      options.device,
      options.type,
      ...((function() {
        var ref,
      results;
        ref = options.config;
        results = [];
        for (key in ref) {
          value = ref[key];
          results.push(`${key}='${value.replace('\'',
      '\\\'')}'`);
        }
        return results;
      })())
    ].join(' ')}`,
    code_skipped: 42
  });
};

// ## Dependencies
yaml = require('js-yaml');

diff = require('object-diff');
