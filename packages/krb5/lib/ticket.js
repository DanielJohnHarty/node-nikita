// Generated by CoffeeScript 2.4.1
// # `nikita.krb5.ticket(options, [callback])`

// Renew the Kerberos ticket of a user principal inside a Unix session.

// ## Options

// * `principal`   
//   Principal to be created.   
// * `password`   
//   Password associated to this principal; required if no randkey is
//   provided.   
// * `keytab`   
//   Path to the file storing key entries.   
// * `cache_name` (string)    
//   Path to Kerberos cache file.    
// * `uid`   
//   Unix uid or username of the Unix session   

// ## Keytab example

// ```js
// require('nikita')
// .krb5.ticket({
//   principal: 'myservice/my.fqdn@MY.REALM',
//   keytab: '/etc/security/keytabs/my.service.keytab',
// }, function(err, {status}){
//   console.info(err ? err.message : 'Is ticket renewed: ' + status);
// });
// ```

// ## Hooks
var handler, krb5, mutate, on_options;

on_options = function({options}) {
  // Import all properties from `options.krb5`
  if (options.krb5) {
    mutate(options, options.krb5);
    return delete options.krb5;
  }
};

// ## Handler
handler = function({options}) {
  var ssh;
  if (!options.keytab && !options.password) {
    throw Error("Incoherent options: expects one of keytab or password");
  }
  // SSH connection
  ssh = this.ssh(options.ssh);
  // @system.uid_gid
  //   uid: options.uid
  //   gid: options.gid
  //   shy: true
  // , (err, {status, uid, gid, default_gid}) ->
  //   options.uid = uid
  //   options.gid = gid
  this.system.execute({
    cmd: `if ${krb5.su(options, 'klist -s')}; then exit 3; fi\n${krb5.kinit(options)}`,
    code_skipped: 3
  });
  return this.system.chown({
    if: (options.uid != null) || (options.gid != null),
    uid: options.uid,
    gid: options.gid,
    target: options.target
  });
};

// ## Export
module.exports = {
  handler: handler,
  on_options: on_options
};

// ## Dependencies
krb5 = require('@nikitajs/core/lib/misc/krb5');

({mutate} = require('mixme'));
