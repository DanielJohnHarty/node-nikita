// Generated by CoffeeScript 2.4.1
// # `nikita.fs.writeFile(options, callback)`

// Options include

// * `content` (string|buffer)   
//   Content to write.
// * `flags` (string)   
//   File flags, see [open(2)](http://man7.org/linux/man-pages/man2/open.2.html).
// * `mode` (string|int)   
//   Permission mode.
// * `target` (string)   
//   Final destination path.
// * `target_tmp` (string)   
//   Temporary file for upload before moving to final destination path.

// ## Source Code
var fs, path, string;

module.exports = {
  status: false,
  log: false,
  handler: function({metadata, options}) {
    var p, ssh;
    this.log({
      message: "Entering fs.writeFile",
      level: 'DEBUG',
      module: 'nikita/lib/fs/writeFile'
    });
    ssh = this.ssh(options.ssh);
    p = ssh ? path.posix : path;
    if (metadata.argument != null) {
      // Default argument
      options.target = metadata.argument;
    }
    if (!options.target) {
      // Validation
      throw Error("Required Option: the \"target\" option is mandatory");
    }
    // Normalization
    options.target = options.cwd ? p.resolve(options.cwd, options.target) : p.normalize(options.target);
    if (ssh && !p.isAbsolute(options.target)) {
      throw Error(`Non Absolute Path: target is ${JSON.stringify(options.target)}, SSH requires absolute paths, you must provide an absolute path in the target or the cwd option`);
    }
    // Real work
    return this.fs.createWriteStream({
      target: options.target,
      flags: options.flags,
      mode: options.mode,
      stream: function(ws) {
        ws.write(options.content);
        return ws.end();
      }
    });
  }
};

// ## Dependencies
path = require('path');

fs = require('ssh2-fs');

string = require('../misc/string');
