// Generated by CoffeeScript 2.5.0
// # `nikita.system.authconfig`

// authconfig provides a simple method of configuring /etc/sysconfig/network to handle NIS, as well as /etc/passwd and /etc/shadow, the files used for shadow password support. Basic LDAP, Kerberos 5, and Winbind client configuration is also provided. 

// ## Options

// * `config` (object)   
//   Key/value pairs of the properties to manage.

// ## Example

// Example of a group object

// ```cson
// require('nikita')
// .system.authconfig({
//   config: {
//     mkhomedir: true
//   }
// }, (err, {status}){
//   console.info(err ? err.message : 'Config' + 
//     status ? 'updated' : 'already set')
//   })
// ```

// ## Source Code
var diff;

module.exports = function({options}) {
  var after, before;
  this.log({
    message: "Entering authconfig",
    level: 'DEBUG',
    module: 'nikita/lib/system/authconfig'
  });
  if (!options.config) {
    throw Error('Required Option: the `config` option is required');
  }
  before = after = null;
  this.system.execute({
    shy: true,
    cmd: ['authconfig', '--test'].join(' '),
    trim: true
  }, function(err, {stdout}) {
    return before = stdout;
  });
  this.system.execute({
    shy: true,
    cmd: [
      'authconfig',
      '--update',
      ...(Object.keys(options.config).map(function(key) {
        if (options.config[key]) {
          return `--enable${key}`;
        } else {
          return `--disable${key}`;
        }
      }))
    ].join(' ')
  });
  this.system.execute({
    shy: true,
    cmd: ['authconfig', '--test'].join(' '),
    trim: true
  }, function(err, {stdout}) {
    return after = stdout;
  });
  return this.call(function({}, callback) {
    var changes;
    changes = diff.diffLines(before, after, {
      ignoreWhitespace: true
    });
    return callback(null, changes.some(function(d) {
      return d.added || d.removed;
    }));
  });
};

diff = require('diff');
